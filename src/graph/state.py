from typing import Annotated, TypedDict, Optional, List, Any


# State TypedDict including new fields for the subquery workflow
class State(TypedDict):
   t2t_question: Optional[str]
   t2t_answer: Optional[str]
   t2i_question: Optional[str]
   t2i_output_path: Optional[Any]
   t2i_aspect_ratio: Optional[str]
   t2i_size: Optional[str]
   t2v_question: Optional[str]
   t2v_negative_question: Optional[str]
   t2v_output_path: Optional[Any]
   t2v_aspect_ratio: Optional[str]
   t2v_resolution: Optional[str]
   i2t_image_path: Optional[Any]
   i2t_answer: Optional[str]
   ti2v_question: Optional[str]
   ti2v_image_path: Optional[Any]
   ti2v_resolution: Optional[str]
   ti2v_aspect_ratio: Optional[str]
   ti2v_negative_question: Optional[str]
   ti2v_output_path: Optional[Any]
   ti2i_image_paths: Optional[List]
   ti2i_question: Optional[str]
   ti2i_aspect_ratio: Optional[str]
   ti2i_output_path: Optional[Any]
   t2s_question: Optional[str]
   t2s_voice: Optional[str]
   t2s_audio_path: Optional[Any]
   ti2t_question: Optional[str]
   ti2t_image_path: Optional[Any]
   ti2t_answer: Optional[str]
   character_description: Optional[str]
   small_story: Optional[str]
   character_image: Optional[str]
   story_plan: Optional[str]
   scene_images: Optional[List[str]]
   final_outputs: Optional[dict]
   complete_story: Optional[dict]